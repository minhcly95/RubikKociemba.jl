# HCube: represents a position in the H group.
# The H group is the group generated by the moves {U, D, F2, R2, B2, L2}.
# The group fixes the corner orientations, edge orientations, and the belt slots.
# In other words, it only permutes the corners, the up-down edges, and the belt edges separately.
# Thus, we can identify an HCube by these 3 properties.
struct HCube
    corner_perm::CornerPerm
    updown_perm::UpDownPerm
    belt_perm::BeltPerm
end

# Get the HCoset from a Cube
function HCube(c::Cube)
    perm = edge_perm(c)
    return HCube(CornerPerm(c), UpDownPerm(perm), BeltPerm(perm))
end

# Identity HCoset
HCube() = HCube(CornerPerm(), UpDownPerm(), BeltPerm())
Base.one(::Type{HCube}) = HCube()
Base.one(::HCube) = HCube()

# Make a Cube from HCube
# Note: not performance critical
function RubikCore.Cube(hc::HCube)
    # Unlike HCoset, not every cube is an HCube.
    # So we cannot seed it with any random Cube.
    seed = Cube()
    seed = Cube(hc.corner_perm; seed)
    seed = Cube(hc.updown_perm; seed)
    seed = Cube(hc.belt_perm; seed)
    return seed
end

